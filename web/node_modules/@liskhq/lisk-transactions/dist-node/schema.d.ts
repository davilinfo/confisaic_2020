export declare const transactionInterface: {
    required: string[];
    properties: {
        toJSON: {
            typeof: string;
        };
        isReady: {
            typeof: string;
        };
        getBytes: {
            typeof: string;
        };
        validate: {
            typeof: string;
        };
        verifyAgainstOtherTransactions: {
            typeof: string;
        };
        apply: {
            typeof: string;
        };
        undo: {
            typeof: string;
        };
        prepare: {
            typeof: string;
        };
        addMultisignature: {
            typeof: string;
        };
        addVerifiedMultisignature: {
            typeof: string;
        };
        processMultisignatures: {
            typeof: string;
        };
        isExpired: {
            typeof: string;
        };
    };
};
export declare const baseTransaction: {
    $id: string;
    type: string;
    required: string[];
    properties: {
        id: {
            type: string;
            format: string;
        };
        blockId: {
            type: string;
            format: string;
        };
        height: {
            type: string;
            minimum: number;
        };
        confirmations: {
            type: string;
            minimum: number;
        };
        type: {
            type: string;
            minimum: number;
        };
        timestamp: {
            type: string;
            minimum: number;
            maximum: number;
        };
        senderPublicKey: {
            type: string;
            format: string;
        };
        senderSecondPublicKey: {
            type: string;
            format: string;
        };
        signature: {
            type: string;
            format: string;
        };
        signSignature: {
            type: string;
            format: string;
        };
        signatures: {
            type: string;
            uniqueItems: boolean;
            items: {
                type: string;
                format: string;
            };
            minItems: number;
            maxItems: number;
        };
        asset: {
            type: string;
        };
        receivedAt: {
            type: string;
            format: string;
        };
    };
};
